#!/usr/bin/env bash
set -e -o pipefail
trap 'e=$?; echo 1>&2 "FAILED!"; exit $e' 0

clean=false
unittest_only=false
while true; do case "$1" in
    -C)     shift; clean=true;;
    -U)     shift; unittest_only=true;;
    *)      break;;
esac; done

basedir="$(cd "$(dirname "$BASH_SOURCE")" && pwd -P)"
cd "$basedir"
$clean && rm -rf .build
. activate -q -p python2

echo ===== Unit Tests
PYTHONPATH="$basedir/bin" \
HOME="${basedir}/t/home" \
    pytest -q "$@" t/t[0-9]*.py
$unittest_only && { trap '' 0; exit 0; }

echo ===== Functional Tests
export HOME="${basedir}/t/home"
export PATH="${basedir}/bin:$PATH"
. ${basedir}/dot/bashrc.inb4

#   Without subpath
diff -u <<. - <(cpd -l a p 2>&1)
$HOME/p1/abc
$HOME/p2/abc
$HOME/p2/abc
.

#   With subpath
diff -u <<. - <(cpd -l a /[dg])
$HOME/p1/abc/def
$HOME/p1/abc/ghi
$HOME/q1/abc/ghi
.

#   Test --project-paths-file option.
cpd -l --project-paths-file t/long-project-paths \? > /dev/null

#   Lint pass for 2- vs. 3-isms
[[ $(python --version 2>&1) = 'Python 2'* ]] \
    && python -3 -Qwarnall -W error ${basedir}/bin/cpd.py >/dev/null

trap '' 0
